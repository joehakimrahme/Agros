{"tagline":"Agros is a binary implementation in C of the limited shell (lshell)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Agros","body":"## AGROS - The New Limited Shell \r\nAGROS is my implementation in C of the Limited Shell (lshell). Lshell is a project developed by ghantoos (mouzannar@gmail.com). The project consists of a UNIX shell coded in Python, that restricts users to a set of predefined commands. You can find the original project here: http://lshell.ghantoos.org. \r\n\r\nAGROS aims at implementing lshell in C. The idea being to get rid of certain limitations of Python, namely: \r\n\r\n - The availability of the Python interpreter on a machine. \r\n - Versions management. (Lshell does not yet support Python 3)\r\n - Performance issues, most notably on embedded systems. \r\n\r\nThis is why AGROS is rightfully named AGROS Got Rid Of the Snake. I'm pretty proud of that name :) AGROS has a submodule called SMAGS, that recently replaced the use of GLib for parsing the conf file. SMAGS is based on the 'iniparser' library written by ndevilla. Here's a link to the original project: http://ndevilla.free.fr/iniparser/ \r\n\r\n### Latest Release:\r\n * Release Name: agros-0.4.0\r\n * Release Date: 11/12/2011 \r\n\r\n### Install:\r\n You can compile the program by running \"make\". If the dependencies are present, it will create a binary executable named \"agros\" that can be directly runnable. If make is called without any arguments, then agros will look for a file called \"agros.conf\" in the current directory. You can give two command line arguments to `make`:\r\n\r\n - SYSCONFDIR: Determines the directory where \"agros.conf\" is located. `make` will also copy automatically the conf file to SYSCONFDIR\r\n - TARGETDIR: Determines the directory where the executable will be moved. \r\n\r\n### Configuration:\r\n There are five variables defined in the agros.conf file.\r\n\r\n - allowed: Gives a list of the allowed commands separated by a semi-colon \";\"\r\n - forbidden: Defines a list of forbidden characters in the command line.\r\n - welcome (optional): Displays a welcome message\r\n - loglevel (optional): Defines the level of log sent to syslog\r\n   0. No logging at all (default)\r\n   1. Logging only prohibited commands\r\n   2. Logging commands that returned an error\r\n   3. Logging everything\r\n - warnings: Sets a number of warnings that decreases every time the user enters a forbidden command. When warnings reach 0, AGROS exits. \r\n\r\n### GNU Readline:\r\n Agros has an experimental version implementing the GNU Readline library for handling user input. It comes with nice features like autocompletion or command history. So far the implementation is still buggy and not very stable. Which is why development is maintained on a separate git branch. Use with caution as there is a high probablity of random crashes. \r\n\r\n### Contact\r\n If you want to contribute to this project, please do not hesitate to send me comments or code patchs at my email adress: Joe \"rahmu\" HAKIM RAHME <joe.hakim.rahme@gmail.com> You can also fork the repository on github.com, and send me pull requests. Here's the repo's URL: https://github.com/rahmu/Agros "}